// Generated by Dagger (https://google.github.io/dagger).
package smartbox.test.application.di.home.event;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import smartbox.test.application.app.home.adapter.EventsRecyclerAdapter;

public final class EventsFragmentModule_ProvideUserAdapterFactory
    implements Factory<EventsRecyclerAdapter> {
  private final EventsFragmentModule module;

  private final Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider;

  public EventsFragmentModule_ProvideUserAdapterFactory(
      EventsFragmentModule module,
      Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider) {
    this.module = module;
    this.listenerProvider = listenerProvider;
  }

  @Override
  public EventsRecyclerAdapter get() {
    return provideInstance(module, listenerProvider);
  }

  public static EventsRecyclerAdapter provideInstance(
      EventsFragmentModule module,
      Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider) {
    return proxyProvideUserAdapter(module, listenerProvider.get());
  }

  public static EventsFragmentModule_ProvideUserAdapterFactory create(
      EventsFragmentModule module,
      Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider) {
    return new EventsFragmentModule_ProvideUserAdapterFactory(module, listenerProvider);
  }

  public static EventsRecyclerAdapter proxyProvideUserAdapter(
      EventsFragmentModule instance, EventsRecyclerAdapter.UserItemListListener listener) {
    return Preconditions.checkNotNull(
        instance.provideUserAdapter(listener),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
