// Generated by Dagger (https://google.github.io/dagger).
package smartbox.test.application.di.home.event;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import smartbox.test.application.app.home.EventsFragment;
import smartbox.test.application.app.home.adapter.EventsRecyclerAdapter;

public final class EventsFragmentModule_ProvideUserListListenerFactory
    implements Factory<EventsRecyclerAdapter.UserItemListListener> {
  private final EventsFragmentModule module;

  private final Provider<EventsFragment> fragmentProvider;

  public EventsFragmentModule_ProvideUserListListenerFactory(
      EventsFragmentModule module, Provider<EventsFragment> fragmentProvider) {
    this.module = module;
    this.fragmentProvider = fragmentProvider;
  }

  @Override
  public EventsRecyclerAdapter.UserItemListListener get() {
    return provideInstance(module, fragmentProvider);
  }

  public static EventsRecyclerAdapter.UserItemListListener provideInstance(
      EventsFragmentModule module, Provider<EventsFragment> fragmentProvider) {
    return proxyProvideUserListListener(module, fragmentProvider.get());
  }

  public static EventsFragmentModule_ProvideUserListListenerFactory create(
      EventsFragmentModule module, Provider<EventsFragment> fragmentProvider) {
    return new EventsFragmentModule_ProvideUserListListenerFactory(module, fragmentProvider);
  }

  public static EventsRecyclerAdapter.UserItemListListener proxyProvideUserListListener(
      EventsFragmentModule instance, EventsFragment fragment) {
    return Preconditions.checkNotNull(
        instance.provideUserListListener(fragment),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
