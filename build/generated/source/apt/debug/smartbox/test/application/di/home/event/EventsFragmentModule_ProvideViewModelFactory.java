// Generated by Dagger (https://google.github.io/dagger).
package smartbox.test.application.di.home.event;

import android.arch.lifecycle.ViewModelProvider;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import smartbox.test.application.app.home.EventsFragment;
import smartbox.test.application.viewmodel.EventsFragmentViewModel;

public final class EventsFragmentModule_ProvideViewModelFactory
    implements Factory<EventsFragmentViewModel> {
  private final EventsFragmentModule module;

  private final Provider<EventsFragment> fragmentProvider;

  private final Provider<ViewModelProvider.Factory> factoryProvider;

  public EventsFragmentModule_ProvideViewModelFactory(
      EventsFragmentModule module,
      Provider<EventsFragment> fragmentProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    this.module = module;
    this.fragmentProvider = fragmentProvider;
    this.factoryProvider = factoryProvider;
  }

  @Override
  public EventsFragmentViewModel get() {
    return provideInstance(module, fragmentProvider, factoryProvider);
  }

  public static EventsFragmentViewModel provideInstance(
      EventsFragmentModule module,
      Provider<EventsFragment> fragmentProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    return proxyProvideViewModel(module, fragmentProvider.get(), factoryProvider.get());
  }

  public static EventsFragmentModule_ProvideViewModelFactory create(
      EventsFragmentModule module,
      Provider<EventsFragment> fragmentProvider,
      Provider<ViewModelProvider.Factory> factoryProvider) {
    return new EventsFragmentModule_ProvideViewModelFactory(
        module, fragmentProvider, factoryProvider);
  }

  public static EventsFragmentViewModel proxyProvideViewModel(
      EventsFragmentModule instance, EventsFragment fragment, ViewModelProvider.Factory factory) {
    return Preconditions.checkNotNull(
        instance.provideViewModel(fragment, factory),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
