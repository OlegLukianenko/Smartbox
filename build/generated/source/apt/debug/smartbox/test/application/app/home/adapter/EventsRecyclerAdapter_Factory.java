// Generated by Dagger (https://google.github.io/dagger).
package smartbox.test.application.app.home.adapter;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class EventsRecyclerAdapter_Factory implements Factory<EventsRecyclerAdapter> {
  private final Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider;

  public EventsRecyclerAdapter_Factory(
      Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider) {
    this.listenerProvider = listenerProvider;
  }

  @Override
  public EventsRecyclerAdapter get() {
    return provideInstance(listenerProvider);
  }

  public static EventsRecyclerAdapter provideInstance(
      Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider) {
    return new EventsRecyclerAdapter(listenerProvider.get());
  }

  public static EventsRecyclerAdapter_Factory create(
      Provider<EventsRecyclerAdapter.UserItemListListener> listenerProvider) {
    return new EventsRecyclerAdapter_Factory(listenerProvider);
  }

  public static EventsRecyclerAdapter newEventsRecyclerAdapter(
      EventsRecyclerAdapter.UserItemListListener listener) {
    return new EventsRecyclerAdapter(listener);
  }
}
