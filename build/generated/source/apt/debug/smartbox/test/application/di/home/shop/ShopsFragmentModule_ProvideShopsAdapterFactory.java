// Generated by Dagger (https://google.github.io/dagger).
package smartbox.test.application.di.home.shop;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import smartbox.test.application.app.home.adapter.ShopsRecyclerAdapter;

public final class ShopsFragmentModule_ProvideShopsAdapterFactory
    implements Factory<ShopsRecyclerAdapter> {
  private final ShopsFragmentModule module;

  private final Provider<ShopsRecyclerAdapter.UserItemListListener> listenerProvider;

  public ShopsFragmentModule_ProvideShopsAdapterFactory(
      ShopsFragmentModule module,
      Provider<ShopsRecyclerAdapter.UserItemListListener> listenerProvider) {
    this.module = module;
    this.listenerProvider = listenerProvider;
  }

  @Override
  public ShopsRecyclerAdapter get() {
    return provideInstance(module, listenerProvider);
  }

  public static ShopsRecyclerAdapter provideInstance(
      ShopsFragmentModule module,
      Provider<ShopsRecyclerAdapter.UserItemListListener> listenerProvider) {
    return proxyProvideShopsAdapter(module, listenerProvider.get());
  }

  public static ShopsFragmentModule_ProvideShopsAdapterFactory create(
      ShopsFragmentModule module,
      Provider<ShopsRecyclerAdapter.UserItemListListener> listenerProvider) {
    return new ShopsFragmentModule_ProvideShopsAdapterFactory(module, listenerProvider);
  }

  public static ShopsRecyclerAdapter proxyProvideShopsAdapter(
      ShopsFragmentModule instance, ShopsRecyclerAdapter.UserItemListListener listener) {
    return Preconditions.checkNotNull(
        instance.provideShopsAdapter(listener),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
